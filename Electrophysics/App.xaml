<Application x:Class="Electrophysics.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Electrophysics"
             StartupUri="StartWindow.xaml">
    <Application.Resources>

        <Style TargetType="Button" x:Key="RoundBlueButton">
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="Background" Value="#2CE8DC"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="10">
                            <ContentPresenter x:Name="contentPresenter"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Content="{TemplateBinding Content}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#bce8e5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="RoundBlueButtonTest">
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="Background" Value="#2CE8DC"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="45">
                            <ContentPresenter x:Name="contentPresenter"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Content="{TemplateBinding Content}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#bce8e5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="MenuItem" x:Key="ImageMenuItem">
            <Setter Property="Background" Value="#333838"/>
            <Setter Property="Foreground" Value="#2CE8DC"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="BorderBrush" Value="#333838"/>
        </Style>

        <Style TargetType="ContextMenu" x:Key="ImageContextMenu">
            <Setter Property="Background" Value="#333838"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        
        <Style TargetType="Button" x:Key="ContinueButton">
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="Background" Value="#2CE8DC"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Content" Value="Далее"/>
            <Setter Property="Width" Value="500"/>
            <Setter Property="Height" Value="70"/>
            <Setter Property="Margin" Value="0 40 0 0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="45">
                            <ContentPresenter x:Name="contentPresenter"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Content="{TemplateBinding Content}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#bce8e5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="RoundGrayButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="10">
                            <ContentPresenter x:Name="contentPresenter"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Content="{TemplateBinding Content}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="HyperTextButton"> 
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="RadioButton" x:Key="HyperTextRadioButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="Rectangle" x:Key="RoundRectangle">
            <Setter Property="RadiusX" Value="3"/>
            <Setter Property="RadiusY" Value="3"/>
        </Style>

        <Style TargetType="CheckBox" x:Key="BlueCheckBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Rectangle Stroke="#2CE8DC" StrokeThickness="4" Style="{StaticResource RoundRectangle}"
                                       Width="30" Height="30" Name="RectangleDot" Fill="Transparent" HorizontalAlignment="Left"/>
                            <Image Grid.ZIndex="1" Name="MarkImage" Source="Resources/галочка.png" Visibility="Hidden" 
                                   Width="25" HorizontalAlignment="Left" Margin="2 0 0 0"/>
                            <ContentPresenter Margin="50 0 0 0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="RectangleDot" Property="Fill" Value="#2CE8DC"/>
                                <Setter TargetName="MarkImage" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="RectangleDot" Property="Fill" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="RadioButton" x:Key="BlueRadioButton">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid>
                            <Ellipse Stroke="#2CE8DC" StrokeThickness="4"
                                       Width="30" Height="30" Name="EllipseRound" Fill="Transparent" HorizontalAlignment="Left"/>
                            <Ellipse Stroke="Black" StrokeThickness="4" Visibility="Hidden" Margin="7.5 0 0 0"
                                       Width="15" Height="15" Name="EllipseDot" Fill="Black" HorizontalAlignment="Left"/>
                            <ContentPresenter Margin="50 0 0 0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="EllipseRound" Property="Fill" Value="#2CE8DC"/>
                                <Setter TargetName="EllipseDot" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="EllipseRound" Property="Fill" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="Button" x:Key="ImageButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="MenuItem" x:Key="CoolMenuItem">
            <Setter Property="Background" Value="#333838"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#333838"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="TextBlock" x:Key="UnderlineTextTest">
            <Setter Property="FontSize" Value="40"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="TextDecorations" Value="Underline"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBlock" x:Key="UnderlineText">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="TextDecorations" Value="Underline"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBox" x:Key="SimpleTextBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="#2CE8DC"/>
            <Setter Property="BorderThickness" Value="4"/>
            <Setter Property="Width" Value="450"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0 30 165 0"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="10 0 0 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="PasswordBox" x:Key="SimplePassBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="#2CE8DC"/>
            <Setter Property="BorderThickness" Value="4"/>
            <Setter Property="Width" Value="450"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0 30 165 0"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="10 0 0 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Century Gothic"/>
        </Style>

        <Style TargetType="Ellipse" x:Key="EmptyEllipse">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Stroke" Value="#2CE8DC"/>
            <Setter Property="StrokeThickness" Value="2.5"/>
            <Setter Property="Fill" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <Style TargetType="Ellipse" x:Key="EmptyEllipseBigger">
            <Setter Property="Width" Value="45"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Stroke" Value="#2CE8DC"/>
            <Setter Property="StrokeThickness" Value="4"/>
            <Setter Property="Fill" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <Style TargetType="Rectangle" x:Key="VerticalLine">
            <Setter Property="Width" Value="2.5"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Fill" Value="#2CE8DC"/>
            <Setter Property="Margin" Value="40 0 0 0"/>
        </Style>

        <Style TargetType="Rectangle" x:Key="HorizontalLine">
            <Setter Property="Width" Value="55"/>
            <Setter Property="Height" Value="4"/>
            <Setter Property="Fill" Value="#2CE8DC"/>
            <Setter Property="Margin" Value="0 35 0 0"/>
        </Style>

        <Style x:Key="SimulatorNumbers" TargetType="TextBlock">
            <Setter Property="FontSize" Value="40"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style x:Key="Paragraph" TargetType="TextBlock">
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="50 30 0 0"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
        </Style>

        <Style x:Key="Header" TargetType="TextBlock">
            <Setter Property="FontSize" Value="50"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0 50 0 0"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>

        <Style x:Key="AnswerSpaceBox" TargetType="TextBox">
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="Padding" Value="0 22 0 22"/>
            <Setter Property="MaxLength" Value="6"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Height" Value="80"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Grid.ZIndex" Value="1"/>
        </Style>

        <Style x:Key="CursorImage" TargetType="Image">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
